// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders the correct text when no enthusiasm level is given 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Header
    name="Daniel"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        "Hello, ",
        "Daniel",
        "! Welcome to React and TypeScript.",
      ],
      "className": "greeting",
    },
    "ref": null,
    "rendered": Array [
      "Hello, ",
      "Daniel",
      "! Welcome to React and TypeScript.",
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": undefined,
      "componentStyle": ComponentStyle {
        "componentId": "sc-bxivhb",
        "isStatic": false,
        "rules": Array [
          "box-sizing: border-box;",
          [Function],
          [Function],
          [Function],
          [Function],
          [Function],
          [Function],
          [Function],
          [Function],
          "
  background-color: palevioletred;
  width: 400px;
  height: 200px;
",
        ],
      },
      "displayName": "Styled(Box)",
      "propTypes": Object {
        "bg": [Function],
        "color": [Function],
        "fontSize": [Function],
        "m": [Function],
        "mb": [Function],
        "ml": [Function],
        "mr": [Function],
        "mt": [Function],
        "mx": [Function],
        "my": [Function],
        "p": [Function],
        "pb": [Function],
        "pl": [Function],
        "pr": [Function],
        "pt": [Function],
        "px": [Function],
        "py": [Function],
        "width": [Function],
      },
      "render": [Function],
      "styledComponentId": "sc-bxivhb",
      "target": "div",
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          "Hello, ",
          "Daniel",
          "! Welcome to React and TypeScript.",
        ],
        "className": "greeting",
      },
      "ref": null,
      "rendered": Array [
        "Hello, ",
        "Daniel",
        "! Welcome to React and TypeScript.",
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": undefined,
        "componentStyle": ComponentStyle {
          "componentId": "sc-bxivhb",
          "isStatic": false,
          "rules": Array [
            "box-sizing: border-box;",
            [Function],
            [Function],
            [Function],
            [Function],
            [Function],
            [Function],
            [Function],
            [Function],
            "
  background-color: palevioletred;
  width: 400px;
  height: 200px;
",
          ],
        },
        "displayName": "Styled(Box)",
        "propTypes": Object {
          "bg": [Function],
          "color": [Function],
          "fontSize": [Function],
          "m": [Function],
          "mb": [Function],
          "ml": [Function],
          "mr": [Function],
          "mt": [Function],
          "mx": [Function],
          "my": [Function],
          "p": [Function],
          "pb": [Function],
          "pl": [Function],
          "pr": [Function],
          "pt": [Function],
          "px": [Function],
          "py": [Function],
          "width": [Function],
        },
        "render": [Function],
        "styledComponentId": "sc-bxivhb",
        "target": "div",
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
